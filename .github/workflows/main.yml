name: Build

concurrency:
    group: build-${{ github.head_ref }}
    cancel-in-progress: true

on:
    push:
        branches:
            - master
    pull_request:
        branches:
            - master
    workflow_dispatch:

jobs:
    # Build job for Ubuntu
    build-ubuntu:
        strategy:
            fail-fast: false
            matrix:
                include:
                    - name: Ubuntu 22-04 GCC
                      image: ubuntu-22.04
                      cc: gcc
                      cxx: g++
                      build-type: Debug
                      experimental: false
                    - name: Ubuntu 20-04 GCC
                      image: ubuntu-20.04
                      cc: gcc
                      cxx: g++
                      build-type: Debug
                      experimental: false
                    - name: Ubuntu 20-04 Clang
                      image: ubuntu-20.04
                      cc: clang
                      cxx: clang++
                      build-type: Debug
                      experimental: true
                    - name: Ubuntu 18-04 GCC (for AppImage comp)
                      image: ubuntu-18.04
                      cc: gcc
                      cxx: g++
                      build-type: Release
                      experimental: false

        name: ${{ matrix.name }} ${{ matrix.build-type }}
        runs-on: ${{ matrix.image }}
        continue-on-error: ${{ matrix.experimental }}

        steps:
            - uses: actions/checkout@v2

            - name: Install Dependencies
              run: sudo apt-get update && sudo apt-get install extra-cmake-modules qttools5-dev qttools5-dev-tools libsdl2-dev libxi-dev libxtst-dev libx11-dev itstool gettext ninja-build

            - name: Configure CMake
              run: cmake -GNinja -DCMAKE_BUILD_TYPE=${{ matrix.build-type }} -B ${{ github.workspace }}/build
              env:
                  CXX: ${{ matrix.cxx }}
                  CC: ${{ matrix.cc }}

            - name: Build AntiMicroX
              run: cmake --build ${{ github.workspace }}/build

    # Build job for Windows
    build-windows:
        name: Windows Server 2019 MinGW Debug
        runs-on: windows-2019
        defaults:
            run:
                shell: msys2 {0}

        steps:
            - uses: actions/checkout@v2

            - name: Install Dependencies
              uses: msys2/setup-msys2@v2
              with:
                  install: >-
                      mingw-w64-x86_64-toolchain
                      mingw-w64-x86_64-ninja
                  msystem: mingw64
                  release: false
            #mingw-w64-x86_64-SDL2 not installed above because of: https://github.com/AntiMicroX/antimicrox/issues/465
            - name: Install sdl2
              run: |
                curl -L -o mingw-w64-x86_64-SDL2-2.0.20-1-any.pkg.tar.zst https://mirror.msys2.org/mingw/mingw64/mingw-w64-x86_64-SDL2-2.0.20-1-any.pkg.tar.zst
                pacman --noconfirm -U mingw-w64-x86_64-SDL2-2.0.20-1-any.pkg.tar.zst


            - name: Install Qt
              uses: jurplel/install-qt-action@v2
              with:
                  version: "5.15.2"
                  host: "windows"
                  target: "desktop"
                  arch: "win64_mingw81"
                  dir: "${{ github.workspace }}/qt/"
                  install-deps: "true"

            - name: Configure CMake
              run: cmake -DCMAKE_BUILD_TYPE=Debug -B '${{ github.workspace }}'/build
              env:
                  CMAKE_PREFIX_PATH: ${{ env.Qt5_Dir }}

            - name: Build
              run: cmake --build '${{ github.workspace }}'/build --parallel 8
